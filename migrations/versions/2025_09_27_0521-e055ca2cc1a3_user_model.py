# mypy: ignore-errors
# ruff: noqa: INP001
"""User model.

Revision ID: e055ca2cc1a3
Revises:
Create Date: 2025-09-27 05:21:22.365612

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "e055ca2cc1a3"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum("USER", "ADMIN", "SUPERADMIN", name="userrole").create(
        op.get_bind()
    )
    op.create_table(
        "users",
        sa.Column(
            "id", sa.Integer(), sa.Identity(always=False), nullable=False
        ),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("phone", sa.String(), nullable=True),
        sa.Column("full_name", sa.String(), nullable=True),
        sa.Column("hashed_password", sa.String(), nullable=False),
        sa.Column(
            "role",
            postgresql.ENUM(
                "USER",
                "ADMIN",
                "SUPERADMIN",
                name="userrole",
                inherit_schema=True,
                create_type=False,
            ),
            server_default="USER",
            nullable=False,
        ),
        sa.Column(
            "is_active",
            sa.Boolean(),
            server_default=sa.text("true"),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__users")),
    )
    op.create_index(op.f("ix__users__email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix__users__phone"), "users", ["phone"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix__users__phone"), table_name="users")
    op.drop_index(op.f("ix__users__email"), table_name="users")
    op.drop_table("users")
    sa.Enum("USER", "ADMIN", "SUPERADMIN", name="userrole").drop(op.get_bind())
    # ### end Alembic commands ###
