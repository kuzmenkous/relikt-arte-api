# mypy: ignore-errors
# ruff: noqa: INP001
"""Confirmation code model.

Revision ID: db801b6293be
Revises: f1d4d42788a3
Create Date: 2025-09-29 03:44:29.575452

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "db801b6293be"
down_revision: str | None = "f1d4d42788a3"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum(
        "REGISTRATION",
        "EMAIL_CHANGE",
        "PASSWORD_RESET",
        name="confirmationcodetype",
    ).create(op.get_bind())
    op.create_table(
        "confirmation_codes",
        sa.Column(
            "id", sa.Integer(), sa.Identity(always=False), nullable=False
        ),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("code", sa.Integer(), nullable=False),
        sa.Column(
            "type",
            postgresql.ENUM(
                "REGISTRATION",
                "EMAIL_CHANGE",
                "PASSWORD_RESET",
                name="confirmationcodetype",
                inherit_schema=True,
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.CheckConstraint(
            "code >=100000 AND code <=999999",
            name=op.f("ck__confirmation_codes__check_code_six_digits"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__confirmation_codes")),
    )
    op.create_index(
        op.f("ix__confirmation_codes__code"),
        "confirmation_codes",
        ["code"],
        unique=True,
    )
    op.create_index(
        op.f("ix__confirmation_codes__email"),
        "confirmation_codes",
        ["email"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix__confirmation_codes__email"), table_name="confirmation_codes"
    )
    op.drop_index(
        op.f("ix__confirmation_codes__code"), table_name="confirmation_codes"
    )
    op.drop_table("confirmation_codes")
    sa.Enum(
        "REGISTRATION",
        "EMAIL_CHANGE",
        "PASSWORD_RESET",
        name="confirmationcodetype",
    ).drop(op.get_bind())
    # ### end Alembic commands ###
